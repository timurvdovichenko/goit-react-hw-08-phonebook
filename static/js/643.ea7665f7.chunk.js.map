{"version":3,"file":"static/js/643.ea7665f7.chunk.js","mappings":"qRAEaA,EAAaC,EAAAA,GAAAA,KAAH,kIAMnB,SAAAC,GAAK,OAAIA,EAAMC,UAAV,IAEIC,EAAcH,EAAAA,GAAAA,MAAH,qEAIXI,EAAcJ,EAAAA,GAAAA,MAAH,wEAGpB,SAAAC,GAAK,OAAIA,EAAMI,WAAV,IAEIC,EAAeN,EAAAA,GAAAA,OAAH,uZAOrB,SAAAC,GAAK,OAAIA,EAAMM,eAAV,G,qFCPIC,GAjBOR,EAAAA,GAAAA,GAAH,gIAMb,IAGoBA,EAAAA,GAAAA,GAAH,qJAQDA,EAAAA,GAAAA,KAAH,gD,+ICyDjB,UArEiB,WACf,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,GAAa,UAATX,EAIJ,GAAa,SAATA,EAAJ,CAIA,GAAa,aAATA,EAIJ,MAAM,IAAIY,MAAJ,mCAAsCZ,IAH1CK,EAAYM,EAFb,MAFCV,EAAQU,QAJRR,EAASQ,EAYZ,EAEKE,EAAgB,mCAAG,WAAMJ,GAAN,iEACvBA,EAAEK,iBAEF,IACER,EAASS,EAAAA,EAAAA,SAAwB,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAEhDY,EAAAA,OAAAA,QAAA,UAAkBhB,EAAlB,4BAGD,CAFC,MAAOiB,GACPD,EAAAA,OAAAA,QAAA,UAAkBhB,EAAlB,uBACD,CACDkB,IAVuB,2CAAH,sDAahBA,EAAY,WAChBjB,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EACD,OACE,+BACE,UAAC,KAAD,CAAYc,SAAUN,EAAtB,WACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAM,UACN,SAAC,KAAD,CAAaO,KAAK,OAAOpB,KAAK,OAAOqB,UAAQ,EAACV,MAAOX,EAAMsB,SAAUd,QAEvE,UAAC,KAAD,YACE,SAAC,KAAD,UAAM,YACN,SAAC,KAAD,CAAaY,KAAK,QAAQpB,KAAK,QAAQqB,UAAQ,EAACV,MAAOT,EAAOoB,SAAUd,QAE1E,UAAC,KAAD,YACE,SAAC,KAAD,UAAM,cACN,SAAC,KAAD,CACEY,KAAK,WACLpB,KAAK,WACLqB,UAAQ,EACRV,MAAOP,EACPkB,SAAUd,QAGd,SAAC,KAAD,CAAcY,KAAK,SAAnB,SAA4B,iBAInC,C","sources":["components/Common.styled.jsx","components/ContactForm/ContactForm.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: block;\n  margin: 30px;\n  padding: 15px;\n  width: 300px;\n  border: 2px solid black;\n  ${props => props.filterForm}\n`;\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\nexport const InputStyled = styled.input`\n  margin-bottom: 25px;\n  width: 150px;\n  ${props => props.inputFilter}\n`;\nexport const ButtonStyled = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 1px solid black;\n  color: black;\n  padding: 0.25em 1em;\n  text-transform: capitalize;\n  ${props => props.buttonListStyle};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover {\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    scale: 1.01;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin: 30px;\n  padding: 15px;\n  margin-top: 0;\n  ${'' /* width: 300px; */}\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-transform: capitalize;\n  padding: 3px;\n`;\n\nexport const Span = styled.span`\n  margin-bottom: 10px;\n`;\n","import { ButtonStyled, FormStyled, InputStyled, LabelStyled } from 'components/Common.styled';\nimport { Span } from 'components/ContactForm/ContactForm.styled';\nimport { Notify } from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth/authOperations';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'email') {\n      setEmail(value);\n      return;\n    }\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n    if (name === 'password') {\n      setPassword(value);\n      return;\n    }\n    throw new Error(`There is no field name - ${name}`);\n  };\n\n  const handleSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      dispatch(authOperations.register({ name, email, password }));\n\n      Notify.success(`${name} registered successfully`);\n    } catch (error) {\n      Notify.failure(`${name} failed to register`);\n    }\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <>\n      <FormStyled onSubmit={handleSubmitForm}>\n        <LabelStyled>\n          <Span>Name</Span>\n          <InputStyled type=\"text\" name=\"name\" required value={name} onChange={handleChange} />\n        </LabelStyled>\n        <LabelStyled>\n          <Span>E-mail</Span>\n          <InputStyled type=\"email\" name=\"email\" required value={email} onChange={handleChange} />\n        </LabelStyled>\n        <LabelStyled>\n          <Span>Password</Span>\n          <InputStyled\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n        </LabelStyled>\n        <ButtonStyled type=\"submit\">Register</ButtonStyled>\n      </FormStyled>\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["FormStyled","styled","props","filterForm","LabelStyled","InputStyled","inputFilter","ButtonStyled","buttonListStyle","Span","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","currentTarget","value","Error","handleSubmitForm","preventDefault","authOperations","Notify","error","resetForm","onSubmit","type","required","onChange"],"sourceRoot":""}